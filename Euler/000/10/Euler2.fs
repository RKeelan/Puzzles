module Euler2

(*
Each new term in the Fibonacci sequence is generated by adding the previous two terms. By starting with 1 and 2, the first 10 terms will be:

1, 2, 3, 5, 8, 13, 21, 34, 55, 89, ...

By considering the terms in the Fibonacci sequence whose values do not exceed four million, find the sum of the even-valued terms.
https://projecteuler.net/problem=2
*)

open System

[<Literal>]
let limit = 4000000

let rec fibonacciEvenSum a b sum =
    printfn $"a = {a}, b = {b}, sum = {sum}"

    let newSum = 
        if((b % 2) = 0) then sum + b
        else sum

    if((a + b) > limit) then newSum
    else
        fibonacciEvenSum b (a+b) newSum

//[<EntryPoint>]
let main argv =
    let number = fibonacciEvenSum 1 2 0
    printfn $"The result is {number}"
    0